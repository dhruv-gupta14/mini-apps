{"ast":null,"code":"import _slicedToArray from \"/home/cosmogod/Desktop/udemy_react/seasons-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cosmogod/Desktop/udemy_react/seasons-hooks/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from \"./Spinner\"; // const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         position => console.log(position),\n//         err => console.log(err)\n//     );\n//     return <div>Hi there!</div>\n// };\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  useEffect(function () {\n    window.navigator.geolocation.getCurrentPosition(function (position) {\n      return setLat(position.coords.latitude);\n    }, function (err) {\n      return setErrorMessage(err.message);\n    });\n  }, []);\n  var content;\n\n  if (errorMessage) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Error:\", errorMessage);\n  } else if (lat) {\n    content = React.createElement(SeasonDisplay, {\n      lat: lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  } else {\n    content = React.createElement(Spinner, {\n      message: \"Please accept the location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"border red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, content);\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/cosmogod/Desktop/udemy_react/seasons-hooks/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Spinner","App","lat","setLat","errorMessage","setErrorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","message","content","render","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACQL,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,MACPM,GADO;AAAA,MACFC,MADE;;AAAA,mBAE0BP,QAAQ,CAAC,EAAD,CAFlC;AAAA;AAAA,MAEPQ,YAFO;AAAA,MAEOC,eAFP;;AAIdR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ;AAAA,aAAIP,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAV;AAAA,KADZ,EAEI,UAAAC,GAAG;AAAA,aAAIR,eAAe,CAACQ,GAAG,CAACC,OAAL,CAAnB;AAAA,KAFP;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,MAAIC,OAAJ;;AACA,MAAGX,YAAH,EAAgB;AACZW,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYX,YAAZ,CAAV;AACH,GAFD,MAEO,IAAGF,GAAH,EAAO;AACVa,IAAAA,OAAO,GAAG,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEb,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH,GAFM,MAED;AACFa,IAAAA,OAAO,GAAG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OADL,CADJ;AAKH,CAzBD;;AA2BAjB,QAAQ,CAACkB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from \"./Spinner\";\n\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         position => console.log(position),\n//         err => console.log(err)\n//     );\n//     return <div>Hi there!</div>\n// };\n\nconst App = () => {\n    const [lat, setLat] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        window.navigator.geolocation.getCurrentPosition(\n            position => setLat(position.coords.latitude),\n            err => setErrorMessage(err.message)\n        );\n    }, []);\n\n    let content;\n    if(errorMessage){\n        content = <div>Error:{errorMessage}</div>;\n    } else if(lat){\n        content = <SeasonDisplay lat={lat} />;\n    } else{\n        content = <Spinner message=\"Please accept the location request\" />;\n    }\n\n    return(\n        <div className=\"border red\">\n            {content}\n        </div> \n    );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}