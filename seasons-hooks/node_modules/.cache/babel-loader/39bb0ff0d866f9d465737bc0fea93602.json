{"ast":null,"code":"var _jsxFileName = \"/home/cosmogod/Desktop/udemy_react/seasons/src/SeasonDisplay.js\";\nimport './SeasonDisplay.css';\nimport React from 'react';\nvar seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach\",\n    iconName: 'sun'\n  },\n  winter: {\n    text: \"Burr it is cold!\",\n    iconName: 'snowflake'\n  }\n};\n\nvar getSeason = function getSeason(lat, month) {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n};\n\nvar SeasonDisplay = function SeasonDisplay(props) {\n  var season = getSeason(props.lat, new Date().getMonth()); // const text =\n  //     season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\n  // const icon = season === 'winter'?'snowflake':'sun';\n\n  var _seasonConfig$season = seasonConfig[season],\n      text = _seasonConfig$season.text,\n      iconName = _seasonConfig$season.iconName;\n  return React.createElement(\"div\", {\n    className: \"season-display \".concat(season),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon-left massive \".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, text), React.createElement(\"i\", {\n    className: \"icon-right massive \".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/home/cosmogod/Desktop/udemy_react/seasons/src/SeasonDisplay.js"],"names":["React","seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth"],"mappings":";AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAE,qBADH;AAEHC,IAAAA,QAAQ,EAAG;AAFR,GADU;AAKjBC,EAAAA,MAAM,EAAE;AACJF,IAAAA,IAAI,EAAC,kBADD;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AALS,CAArB;;AAWA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACxB,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACH,GAFD,MAEO;AACH,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACH;AACJ,CAND;;AAQA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,MAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB,CAD6B,CAE7B;AACA;AACA;;AAJ6B,6BAKJZ,YAAY,CAACU,MAAD,CALR;AAAA,MAKtBR,IALsB,wBAKtBA,IALsB;AAAA,MAKjBC,QALiB,wBAKjBA,QALiB;AAO7B,SACI;AAAK,IAAA,SAAS,2BAAoBO,MAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,8BAAuBP,QAAvB,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFJ,EAGI;AAAG,IAAA,SAAS,+BAAwBC,QAAxB,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAdD;;AAgBA,eAAeK,aAAf","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n    summer:{\n        text: \"Let's hit the beach\",\n        iconName : 'sun'\n    },\n    winter :{\n        text:\"Burr it is cold!\",\n        iconName: 'snowflake'\n    }\n};\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    // const text =\n    //     season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\n    // const icon = season === 'winter'?'snowflake':'sun';\n    const{ text,iconName } = seasonConfig[season];\n    \n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`} /> \n        </div>\n    );\n};\n\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}