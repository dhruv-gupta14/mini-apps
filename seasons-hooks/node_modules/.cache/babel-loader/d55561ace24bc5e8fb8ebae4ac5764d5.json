{"ast":null,"code":"import _classCallCheck from \"/home/cosmogod/Desktop/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cosmogod/Desktop/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cosmogod/Desktop/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cosmogod/Desktop/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cosmogod/Desktop/udemy_react/seasons/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cosmogod/Desktop/udemy_react/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         position => console.log(position),\n//         err => console.log(err)\n//     );\n//     return <div>Hi there!</div>\n// };\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      lat: null,\n      errorMessage: ''\n    }; // initialise state\n\n    window.navigator.geolocation.getCurrentPosition(function (position) {\n      _this.setState({\n        lat: position.coords.latitude\n      });\n    }, function (err) {\n      _this.setState({\n        errorMessage: err.message\n      });\n    });\n    return _this;\n  } // React says we have to define render\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorMessage && !this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Error: \", this.state.errorMessage);\n      }\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Latitude:\", this.state.lat);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading!\");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/cosmogod/Desktop/udemy_react/seasons/src/index.js"],"names":["React","ReactDOM","App","props","state","lat","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAC;AAA1B,KAAb,CAHc,CAG8B;;AAE5CC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAAAC,QAAQ,EAAI;AACR,YAAKC,QAAL,CAAc;AAAEP,QAAAA,GAAG,EAAEM,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,OAAd;AACH,KAHL,EAII,UAAAC,GAAG,EAAI;AACH,YAAKH,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAES,GAAG,CAACC;AAApB,OAAd;AACH,KANL;AALc;AAajB,G,CAID;;;;;6BACQ;AAEJ,UAAG,KAAKZ,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACH;;AAED,UAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAe,KAAKD,KAAL,CAAWC,GAA1B,CAAP;AACH;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;;;EA9BaL,KAAK,CAACiB,S;;AAiCxBhB,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         position => console.log(position),\n//         err => console.log(err)\n//     );\n//     return <div>Hi there!</div>\n// };\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = { lat: null, errorMessage:''}; // initialise state\n\n        window.navigator.geolocation.getCurrentPosition(\n            position => {\n                this.setState({ lat: position.coords.latitude}); \n            },\n            err => {\n                this.setState({ errorMessage: err.message});\n            }\n        );\n    }\n\n\n\n    // React says we have to define render\n    render(){ \n\n        if(this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if(!this.state.errorMessage && this.state.lat){\n            return <div>Latitude:{this.state.lat}</div>;\n        }\n\n        return <div>Loading!</div>\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}